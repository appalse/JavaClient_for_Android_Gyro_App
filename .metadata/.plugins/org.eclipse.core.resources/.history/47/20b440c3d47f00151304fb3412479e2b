import java.net.*;
import java.nio.ByteBuffer;
import java.io.*;


public class ClientMain {

	private static Logger logger;
	private static Socket s;
	//private static String serverIpAddress = "192.168.0.103"; 
	private static String serverIpAddress = "192.168.0.102";

	public static void main(String[] args) {
		
		logger = Logger.GetLogger();
		
		int serverPort[] = { 12346, 12347 };	
		try{
			if( !attemptToOpen( serverPort[0] ) ) {
				if( !attemptToOpen( serverPort[1] ) ) {
					throw new Exception("Cannot open connection");					
				}
			}
			
			InputStream is = s.getInputStream();
			byte buf[] = new byte[36];
			int r;
			System.out.println("start:");
			while(true){
				//Thread.sleep(5000);
				//System.out.println("add:");
				if(s.isClosed() || !s.isConnected()){
					logger.WriteLine("socket is closed");
					break;
				}
				//System.out.println("read:");
				r = is.read(buf);
				System.out.println("readed package length = " + r);
				Byte length = new Byte(buf[0]);
				System.out.println("real package length = " + length);
				byte[] tempArr = {buf[1], buf[2]};
				ByteBuffer wrapped = ByteBuffer.wrap(tempArr); // big-endian by default
				short idSensor = wrapped.getShort();
				System.out.println("idSensor = " + idSensor);
				
				//System.out.println("new");
				String data = new String(buf, 0, r);
				logger.WriteLine( data );	
				//logger.WriteLine("");
				
				
			}
		} catch(Exception e) {
			logger.WriteLine( e.getMessage() );
		}
		System.out.println("end");
	}
	
	private static boolean attemptToOpen( int port ) {
		try{
			s = new Socket(serverIpAddress, port);
		}catch(Exception e) {
			logger.WriteLine( e.getMessage() );
			return false;
		}	
		logger.WriteLine("port " + Integer.toString(port) + " connected");
		return true;
	}

}
